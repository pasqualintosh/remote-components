"use strict";var e=require("react"),t=require("react-native"),r=require("react-native-elements"),n=require("react-redux");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=o(e);function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function u(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,u=!0,i=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){i=!0,l=e},f:function(){try{u||null==r.return||r.return()}finally{if(i)throw l}}}}var i=n.connect((function(e){return{todos:e.todos}}),(function(e){return{markCompleted:function(t){return e({type:"store/toggle-todo",payload:{id:t,completed:!1}})}}}))((function(e){var n=e.todos,o=e.markCompleted,a=e.children,i=e.flow;return console.log("children",a),l.default.createElement(r.Card,null,l.default.createElement(t.View,{style:{flexDirection:"vertical"!==i?"row":"column",justifyContent:"space-between",alignItems:"center",marginVertical:20}},l.default.createElement(t.View,null,l.default.createElement(r.Text,null,"• There are ",n.length," Todos"),l.default.createElement(r.Text,null,"• Completed ",n.filter((function(e){return e.completed})).length," Todos"),l.default.createElement(r.Text,null,"• Using connect()")),"vertical"===i&&l.default.createElement(t.View,{style:{height:15}}),l.default.createElement(r.Button,{title:"Mark All as to be done",onPress:function(){var e,t=u(n);try{for(t.s();!(e=t.n()).done;){var r=e.value;o(r.id)}}catch(e){t.e(e)}finally{t.f()}}}),a))}));module.exports=i;
